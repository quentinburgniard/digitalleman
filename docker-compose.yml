version: "3"

services:

  reverse-proxy:
    container_name: reverse-proxy
    image: ${DOCKER_REGISTRY}/reverse-proxy:${REVERSE_PROXY_VERSION}
    environment:
      API_KEY: $AMPLIFY_API_KEY
      AMPLIFY_IMAGENAME: $AMPLIFY_IMAGENAME
    volumes:
      - certs:/certs:ro
      - ./reverse-proxy/${ENV}:/etc/nginx:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - letsencrypt-dns-challenge
      - mariadb
      - mongodb
      - phpmyadmin
      - api
      - cloud
      - portfolio
      - cv
      - discover-me
      - discover-me-api
    restart: always
    
  registry:
    container_name: registry
    image: registry:2
    environment:
      REGISTRY_STORAGE_S3_ACCESSKEY: $AWS_API_ACCESSKEY
      REGISTRY_STORAGE_S3_SECRETKEY: $AWS_API_SECRETKEY
    volumes:
      - ./registry/${ENV}/config.yml:/etc/docker/registry/config.yml
      - ./registry/htpasswd:/auth/htpasswd:ro
      - certs:/etc/letsencrypt:ro
    ports:
      - "443:443"
    depends_on:
      - registry-htpasswd
      - letsencrypt-dns-challenge
    restart: always
    
  registry-htpasswd:
    container_name: registry-htpasswd
    image: registry:2
    entrypoint: htpasswd
    command: -bcB -C 17 /auth/htpasswd $DOCKER_REGISTRY_USER $DOCKER_REGISTRY_PASSWORD
    volumes:
      - ./registry:/auth

  letsencrypt-dns-challenge:
    container_name: letsencrypt-dns-challenge
    image: certbot/dns-digitalocean
    command: certonly --dns-digitalocean --dns-digitalocean-credentials /digitalocean.ini --dns-digitalocean-propagation-seconds 60 -n --agree-tos -m quentinburgniard@gmail.com -d $DOMAIN_NAME
    volumes:
      - certs:/etc/letsencrypt
      - ./letsencrypt-dns-challenge/digitalocean.ini:/digitalocean.ini:ro

  mariadb:
    container_name: mariadb
    image: mariadb:10
    environment:
      MARIADB_ROOT_PASSWORD: $MARIADB_ROOT_PASSWORD
      MYSQL_DATABASE: api
      MARIADB_USER: $MARIADB_USER
      MARIADB_PASSWORD: $MARIADB_PASSWORD
    volumes:
      - mariadb:/var/lib/mysql
      - ./mariadb/my.cnf:/etc/mysql/my.cnf:ro
    restart: always

  mongodb:
    container_name: mongodb
    image: mongo:4
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGODB_ROOT_USER
      MONGODB_ROOT_PASSWORD: $MONGODB_ROOT_PASSWORD
      MONGO_INITDB_DATABASE: api

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mariadb
      PHPMYADMIN_URI: $PHPMYADMIN_URI
    depends_on:
      - mariadb
    restart: always

  api:
    container_name: api
    image: strapi/strapi
    environment:
      APP_NAME: strapi
      DATABASE_CLIENT: MongoDB
      DATABASE_HOST: mongodb
      DATABASE_NAME: api
      DATABASE_USERNAME: $MONGODB_ROOT_USER
      DATABASE_PASSWORD: $MONGODB_ROOT_PASSWORD
    volumes:
      - strapi:/usr/src/api/strapi
    depends_on:
      - mongodb
    restart: always
    
  cloud:
    container_name: cloud
    image: nextcloud
    environment:
      NEXTCLOUD_ADMIN_USER: $NEXTCLOUD_ADMIN_USER
      NEXTCLOUD_ADMIN_PASSWORD: $NEXTCLOUD_ADMIN_PASSWORD
      MYSQL_HOST: mariadb
      MYSQL_DATABASE: cloud
      MYSQL_USER: $MARIADB_USER
      MYSQL_PASSWORD: $MARIADB_PASSWORD
      NEXTCLOUD_UPDATE: 1
      SMTP_HOST: 
    volumes:
      - strapi:/usr/src/api/strapi
    depends_on:
      - mariadb
    restart: always

  portfolio:
    container_name: portfolio
    image: quentinburgniard/portfolio:${PORTFOLIO_VERSION}
    depends_on:
      - mariadb
    restart: always

  cv:
    container_name: cv
    image: quentinburgniard/cv:${CV_VERSION}
    restart: always

  discover-me:
    container_name: discover-me
    image: quentinburgniard/discover-me:${DISCOVER_ME_VERSION}
    restart: always

  discover-me-api:
    container_name: discover-me-api
    image: quentinburgniard/discover-me-api:${DISCOVER_ME_API_VERSION}
    restart: always

volumes:
  certs:
  mariadb:
  strapi:
