version: "3"

services:
  api:
    container_name: api
    image: strapi/strapi
    environment:
      APP_NAME: api
      DATABASE_CLIENT: mongo
      DATABASE_HOST: api-db
      DATABASE_NAME: api
      DATABASE_USERNAME: $API_DATA_USER
      DATABASE_PASSWORD: $API_DATA_PASSWORD
    volumes:
      - api:/usr/src/api/strapi
    depends_on:
      - api-data
    restart: always

  api-data:
    container_name: api-data
    image: mongo:4
    environment:
      MONGO_INITDB_ROOT_USERNAME: $API_DATA_USER
      MONGO_INITDB_ROOT_PASSWORD: $API_DATA_PASSWORD
      MONGO_INITDB_DATABASE: api
    volumes:
      - api-data:/data/db
    restart: always

  cloud:
    container_name: cloud
    image: nextcloud:18
    environment:
      NEXTCLOUD_ADMIN_USER: $CLOUD_USER
      NEXTCLOUD_ADMIN_PASSWORD: $CLOUD_PASSWORD
      NEXTCLOUD_TRUSTED_DOMAINS: $CLOUD
      MYSQL_HOST: cloud-data
      MYSQL_DATABASE: cloud
      MYSQL_USER: $CLOUD_DATA_USER
      MYSQL_PASSWORD: $CLOUD_DATA_PASSWORD
    depends_on:
      - cloud-data
    restart: always

  cloud-data:
    container_name: cloud-data
    image: mariadb:10
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
      MYSQL_USER: $CLOUD_DATA_USER
      MYSQL_PASSWORD: $CLOUD_DATA_PASSWORD
      MYSQL_DATABASE: cloud
    volumes:
      - cloud-data:/var/lib/mysql
    restart: always
    
  cv:
    container_name: cv
    image: ${REGISTRY}/cv:${CV_VERSION}
    restart: always

  discover-me:
    container_name: discover-me
    image: ${REGISTRY}/discover-me:${DISCOVER_ME_VERSION}
    depends_on:
      - discover-me-api
    restart: always

  discover-me-api:
    container_name: discover-me-api
    image: ${REGISTRY}/discover-me-api:${DISCOVER_ME_API_VERSION}
    restart: always
    
  lavoieducoeur:
    container_name: lavoieducoeur
    image: ${REGISTRY}/la-voie-du-coeur:${LAVOIEDUCOEUR_VERSION}
    depends_on:
      - api
    restart: always

  portfolio:
    container_name: portfolio
    image: ${REGISTRY}/portfolio:${PORTFOLIO_VERSION}
    restart: always

  registry:
    container_name: registry
    image: registry:2
    environment:
      REGISTRY_STORAGE_S3_BUCKET: $REGISTRY
      REGISTRY_STORAGE_S3_ACCESSKEY: $AWS_API_ACCESSKEY
      REGISTRY_STORAGE_S3_SECRETKEY: $AWS_API_SECRETKEY
    volumes:
      - ./registry/config.yml:/etc/docker/registry/config.yml
      - registry-password:/registry-password:ro
      - ssl-certs:/ssl-certs:ro
    ports:
      - 443:443
    depends_on:
      - registry-cache
      - ssl-certs-${ENV}
      - registry-password
    restart: always
  
  registry-cache:
    container_name: registry-cache
    image: redis:5
    restart: always
      
  registry-password:
    container_name: registry-password
    image: registry:2
    entrypoint: htpasswd
    command: -bcB -C 17 /registry-password/htpasswd $REGISTRY_USER $REGISTRY_PASSWORD
    volumes:
      - registry-password:/registry-password
  
  reverse-proxy:
    container_name: reverse-proxy
    image: ${REGISTRY}/reverse-proxy:${REVERSE_PROXY_VERSION}
    environment:
      API_KEY: $AMPLIFY_API_SECRETKEY
      AMPLIFY_IMAGENAME: $MAIN_DOMAIN
    volumes:
      - ssl-certs:/ssl-certs:ro
      - ./reverse-proxy:/etc/nginx:ro
    ports:
      - 80:80
      - 443:443
    depends_on:
      - api
      - cloud
      - cv
      - discover-me
      - portfolio
      - ssl-certs-${ENV}
  
  ssl-certs-dev:
    container_name: ssl-certs-dev
    image: frapsoft/openssl
    command: req -keyout /ssl-certs/privkey.pem -newkey rsa:2048 -nodes -out /ssl-certs/fullchain.pem -subj "/C=CH/ST=Geneve/L=Geneve/O=Digital Leman/CN=digital-leman.com" -x509
    volumes:
      - ssl-certs:/ssl-certs

  ssl-certs-prod:
    container_name: ssl-certs-prod
    image: certbot/dns-digitalocean
    command: certonly --dns-digitalocean --dns-digitalocean-credentials /digitalocean.ini --dns-digitalocean-propagation-seconds 120 -n --agree-tos -m quentinburgniard@gmail.com --cert-name d -d $DOMAINS
    volumes:
      - ssl-certs:/etc/letsencrypt/live/d
      - ./ssl-certs/digitalocean.ini:/digitalocean.ini:ro

volumes:
  api-data:
  cloud-data:
  registry-password:
  ssl-certs:
  api: